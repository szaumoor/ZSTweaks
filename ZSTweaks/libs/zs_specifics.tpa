DEFINE_PATCH_FUNCTION remove_haste_immunity
BEGIN
    LPF CHECK_EXTENSION STR_VAR extension = "ITM" END
    LPF DELETE_EFFECT INT_VAR check_headers = 0 STR_VAR match_resource = ~SPRA301~          END
    LPF DELETE_EFFECT INT_VAR check_headers = 0 STR_VAR match_resource = ~SPIN572~          END
    LPF DELETE_EFFECT INT_VAR check_headers = 0 STR_VAR match_resource = ~SPWI305~          END
    LPF DELETE_EFFECT INT_VAR check_headers = 0 STR_VAR match_resource = ~SPWI613~          END
    LPF DELETE_EFFECT INT_VAR check_headers = 0 STR_VAR match_resource = ~SPIN828~          END
    LPF DELETE_EFFECT INT_VAR check_headers = 0 match_opcode = 169 match_parameter2 = 38    END
    LPF DELETE_EFFECT INT_VAR check_headers = 0 match_opcode = 101 match_parameter2 = 16    END
    LPF DELETE_EFFECT INT_VAR check_headers = 0 match_opcode = 240 match_parameter2 = 38    END
    LPF DELETE_EFFECT INT_VAR check_headers = 0 match_opcode = 267 match_parameter1 = 14023 END
    LPF DELETE_EFFECT INT_VAR check_headers = 0 match_opcode = 126                          END
END

DEFINE_ACTION_FUNCTION generate_rogue_thac0
STR_VAR
    class1 = ~~
    class2 = ~~
BEGIN
    COPY_EXISTING ~thac0.2da~ ~override~
        READ_2DA_ENTRIES_NOW thac0 1
        FOR (row = 3; row < thac0; ++row) BEGIN
            SET cthac0 = 20
            SET reps = 0
            READ_2DA_ENTRY_FORMER thac0 row 0 label
            PATCH_IF ~%label%~ STR_EQ ~%class1%~ OR ~%label%~ STR_EQ ~%class2%~ BEGIN
                SET_2DA_ENTRY_LATER thac0_out row 1 cthac0
                SET iteration = 2
                FOR ( i = 1; i < cthac0 - 6; ++iteration ) BEGIN
                    SET num = cthac0 - i
                    PATCH_IF (reps < 2) AND (num MODULO 2 != 0) BEGIN
                        reps += 1
                    END ELSE BEGIN
                        i += 1
                        num = cthac0 - i
                        reps = 1
                    END
                    SET_2DA_ENTRY_LATER thac0_out row iteration num
                END
                FOR ( index = 23; index <= 40; ++index ) BEGIN
                    SET_2DA_ENTRY_LATER thac0_out row index 6
                END
            END
        END
        SET_2DA_ENTRIES_NOW thac0_out 1
END

DEFINE_PATCH_FUNCTION weapon_damage_by_class
	INT_VAR header=0 // the weapon header to which the effect is applied
			probability1=100 // the probabilities for the effect to be applied
			probability2=0
            type = 99
			insert_point = 0
	STR_VAR class="" // the class which gets the effect (from class.ids)
			spell="" // a spell which is cast on the target on a successful hit, but only if the wielder is the correct class
BEGIN
    LPF CHECK_EXTENSION STR_VAR extension = "ITM" END
	LPF ADD_ITEM_EFFECT
        INT_VAR type header probability1 probability2 insert_point opcode=326 target=1 timing=1 parameter1=IDS_OF_SYMBOL (class "%class%") parameter2=105 STR_VAR resource="%spell%" END
END


DEFINE_PATCH_FUNCTION weapon_damage_by_kit
INT_VAR header=0 // the weapon header to which the effect is applied
        probability1=100 // the probabilities for the effect to be applied
        probability2=0
        type = 99
        insert_point = 0
STR_VAR kit="" // the kit which gets the effect (from kit.ids)
        spell="" // a spell which is cast on the target on a successful hit, but only if the wielder is the correct class
BEGIN
    LPF CHECK_EXTENSION STR_VAR extension = "ITM" END
	LPF ADD_ITEM_EFFECT INT_VAR type header probability1 probability2 insert_point opcode=326 target=1 timing=1 parameter1=IDS_OF_SYMBOL (kit "%class%") parameter2=105 STR_VAR resource="%spell%" END
END


DEFINE_PATCH_FUNCTION weapon_damage_by_race
INT_VAR header=0 // the weapon header to which the effect is applied
        probability1=100 // the probabilities for the effect to be applied
        probability2=0
        type = 99
        insert_point = 0
STR_VAR race="" // the race which gets the effect (from race.ids)
        spell="" // a spell which is cast on the target on a successful hit, but only if the wielder is the correct race
BEGIN
    LPF CHECK_EXTENSION STR_VAR extension = "ITM" END
	LPF ADD_ITEM_EFFECT INT_VAR type header probability1 probability2 insert_point opcode=326 target=1 timing=1 parameter1=IDS_OF_SYMBOL (race "%race%") parameter2=104 STR_VAR resource="%spell%" END
END


DEFINE_PATCH_FUNCTION weapon_damage_by_gender
INT_VAR header=0 // the weapon header to which the effect is applied
        probability1=100 // the probabilities for the effect to be applied
        probability2=0
        type = 99
        insert_point = 0
STR_VAR gender="" // the gender which gets the effect (from race.ids)
        spell="" // a spell which is cast on the target on a successful hit, but only if the wielder is the correct race
BEGIN
    LPF CHECK_EXTENSION STR_VAR extension = "ITM" END
	LPF ADD_ITEM_EFFECT INT_VAR type header probability1 probability2 insert_point opcode=326 target=1 timing=1 parameter1=IDS_OF_SYMBOL (gender "%gender%") parameter2=107 STR_VAR resource="%spell%" END
END


DEFINE_PATCH_FUNCTION weapon_damage_by_alignment
INT_VAR header=0 // the weapon header to which the effect is applied
        probability1=100 // the probabilities for the effect to be applied
        probability2=0
        type = 99
        insert_point = 0
STR_VAR alignment="" // the alignment which gets the effect (from race.ids)
        spell="" // a spell which is cast on the target on a successful hit, but only if the wielder is the correct alignment
BEGIN
    LPF CHECK_EXTENSION STR_VAR extension = "ITM" END
	LPF ADD_ITEM_EFFECT INT_VAR type header probability1 probability2 insert_point opcode=326 target=1 timing=1 parameter1=IDS_OF_SYMBOL (alignmen "%alignment%") parameter2=108 STR_VAR resource="%spell%" END
END

DEFINE_PATCH_FUNCTION weapon_damage_by_creature_type
INT_VAR header=0 // the weapon header to which the effect is applied
        probability1=100 // the probabilities for the effect to be applied
        probability2=0
        type = 99
        insert_point = 0
        parameter2 = 0
STR_VAR parameter1="" // the alignment which gets the effect (from race.ids)
        spell="" // a spell which is cast on the target on a successful hit, but only if the wielder is the correct alignment
BEGIN
    LPF CHECK_EXTENSION STR_VAR extension = "ITM" END
	LPF ADD_ITEM_EFFECT INT_VAR type header parameter1 parameter2 probability1 probability2 insert_point opcode=326 target=1 timing=1 STR_VAR resource="%spell%" END
END

DEFINE_PATCH_FUNCTION RM_STAT_REQS
    INT_VAR // exceptions
        str = "-1"
    BEGIN
        LPF CHECK_EXTENSION STR_VAR extension = "ITM" END
        PATCH_IF str <= "-1" BEGIN
            WRITE_SHORT 0x26 0 // STR
        END ELSE BEGIN
            WRITE_SHORT 0x26 str // STR
        END
        WRITE_BYTE 0x2c 0 // DEX
        WRITE_BYTE 0x2e 0 // WIS
        WRITE_BYTE 0x2a 0 // INT
        WRITE_BYTE 0x30 0 // CON
        WRITE_BYTE 0x32 0 // CHA
END

DEFINE_PATCH_FUNCTION GET_SHIELD_LEVEL
RET
   result
BEGIN
    LPF CHECK_EXTENSION STR_VAR extension = "ITM" END
    SET original_ac = "-1"
    SET result = "-1"
    GET_OFFSET_ARRAY eff_arr 0x6a 4 0x70 2 0 0 0x30
    PHP_EACH eff_arr AS int => ab_off BEGIN
        PATCH_IF SHORT_AT(ab_off) = 0 AND LONG_AT(ab_off + 0x8) = 0 BEGIN
            result = (LONG_AT(ab_off + 0x4)) - 1
            PATCH_IF result = "-1" BEGIN
                PATCH_WARN "Something went wrong, the shield %SOURCE_RES% had no base AC value: %result%"
            END
        END
    END
END


DEFINE_PATCH_FUNCTION PATCH_SHIELD
INT_VAR
    type = "-1"
BEGIN
    PATCH_IF type < 0 BEGIN
        PATCH_FAIL "Must specify a type of Armor Class to patch on shield"
    END
    LPF CHECK_EXTENSION STR_VAR extension = "ITM" END
    SET found = 0
    LPF GET_SHIELD_LEVEL RET enchantment_level = result END
    GET_OFFSET_ARRAY eff_arr 0x6a 4 0x70 2 0 0 0x30
    PHP_EACH eff_arr AS int => ab_off BEGIN
        PATCH_IF SHORT_AT(ab_off) = 0 AND LONG_AT(ab_off + 0x8) = type BEGIN
            ++found
            READ_LONG (ab_off + 0x4) base_ac ELSE "-999"

            PATCH_IF base_ac = "-999" BEGIN
                PATCH_WARN "Something went wrong, the shield %SOURCE_RES% had no type %type% AC value!"
            END ELSE BEGIN
                PATCH_IF found = 2 BEGIN
                    PATCH_WARN "Found more than 2 type %type% AC values in shield %SOURCE_RES%."
                END
            END

            PATCH_IF found = 1 AND enchantment_level > 1 BEGIN
                SET bonus = enchantment_level / 2
                WRITE_LONG (ab_off + 0x4) (THIS + bonus)
            END

        END
    END
END

DEFINE_PATCH_FUNCTION PATCH_FOR_BUCKLER_IMMUNITIES
// might have to record instances and then patch them in separately
BEGIN
    LPF CHECK_EXTENSION INT_VAR suppress = 1 STR_VAR extension = "ITM" RET itm_file = result END
    LPF CHECK_EXTENSION INT_VAR suppress = 1 STR_VAR extension = "SPL" RET spl_file = result END
    LPF CHECK_EXTENSION INT_VAR suppress = 1 STR_VAR extension = "CRE" RET cre_file = result END

    PATCH_IF NOT itm_file AND NOT spl_file AND NOT cre_file BEGIN
        PATCH_FAIL "This function only works for .ITM,.SPL, and .CRE files"
    END

    SET nonmagical = 0
    SET magical = 0
    SET enchantment = 0

    PATCH_IF spl_file BEGIN
        // SET found = 0
        // READ_ASCII 0x8 res_name (32) NULL
        GET_OFFSET_ARRAY eff_arr 0x64 4 0x68 2 0 0 0x28
        PHP_EACH eff_arr AS int => ab_off BEGIN

            GET_OFFSET_ARRAY2 fx_array ab_off SPL_V10_HEAD_EFFECTS
            PHP_EACH fx_array AS int => fx_off BEGIN

                SET opcode = SHORT_AT(fx_off)
                PATCH_IF opcode = 120 BEGIN

                    // PATCH_IF found = 0 BEGIN
                    //     PATCH_PRINT "Patching spell %res_name% (%SOURCE_RES%) for buckler immunity"
                    //     ++found
                    // END

                    SET parameter1 = LONG_AT(fx_off + 0x4)
                    SET parameter2 = LONG_AT(fx_off + 0x8)

                    PATCH_IF nonmagical = 0 AND parameter2 = 2 AND parameter1 = 0 BEGIN
                        ++nonmagical
                    END

                    ELSE PATCH_IF magical = 0 AND parameter2 = 1 AND parameter1 = 0 BEGIN
                        ++magical
                    END

                    ELSE PATCH_IF parameter2 = 0 AND parameter1 > 0 BEGIN
                        ++enchantment
                    END

                END

            END

        END

    END

    ELSE PATCH_IF itm_file BEGIN
        GET_OFFSET_ARRAY eff_arr 0x6a 4 0x70 2 0 0 0x30
        PHP_EACH eff_arr AS int => ab_off BEGIN
            SET opcode = SHORT_AT(ab_off)
            PATCH_IF opcode = 120 BEGIN

                SET parameter1 = LONG_AT(ab_off + 0x4)
                SET parameter2 = LONG_AT(ab_off + 0x8)

                PATCH_IF nonmagical = 0 AND parameter2 = 2 AND parameter1 = 0 BEGIN
                    ++nonmagical
                END

                ELSE PATCH_IF magical = 0 AND parameter2 = 1 AND parameter1 = 0 BEGIN
                    ++magical
                END

                ELSE PATCH_IF parameter2 = 0 AND parameter1 > 0 BEGIN
                    ++enchantment
                END

            END
        END

    END

    ELSE PATCH_IF cre_file BEGIN
        READ_BYTE 0x33 eff_type

        PATCH_IF eff_type = 0 BEGIN
            SET effect_size = 0x30
        END ELSE BEGIN
            SET effect_size = 0x108
        END

        GET_OFFSET_ARRAY eff_arr 0x2c4 4 0x2c8 4 0 0 effect_size
        PHP_EACH eff_arr AS int => ab_off BEGIN

            PATCH_IF eff_type = 0 BEGIN
                READ_SHORT ab_off opcode
            END ELSE BEGIN
                READ_LONG (ab_off + 0x8) opcode
            END

            PATCH_IF opcode = 120 BEGIN

                PATCH_IF eff_type = 0 BEGIN
                    READ_LONG (ab_off + 0x4) parameter1
                    READ_LONG (ab_off + 0x8) parameter2
                END ELSE BEGIN
                    READ_LONG (ab_off + 0x14) parameter1
                    READ_LONG (ab_off + 0x18) parameter2
                END

                PATCH_IF nonmagical = 0 AND parameter2 = 2 AND parameter1 = 0 BEGIN
                    ++nonmagical
                END

                ELSE PATCH_IF magical = 0 AND parameter2 = 1 AND parameter1 = 0 BEGIN
                    ++magical
                END

                ELSE PATCH_IF parameter2 = 0 AND parameter1 > 0 BEGIN
                    ++enchantment
                END
            END
        END
    END

    PATCH_IF nonmagical BEGIN
        LPF CLONE_EFFECT INT_VAR silent = 1 match_opcode=120 match_parameter2=2 match_parameter1=0 opcode=206 parameter1=0 parameter2=0 STR_VAR resource=~ZSTWBK00~ END
    END

    PATCH_IF magical BEGIN
        PATCH_FOR_EACH ench IN 1 2 3 4 5 6 BEGIN
            LPF CLONE_EFFECT INT_VAR silent = 1 match_opcode=120 match_parameter2=1 match_parameter1=0 opcode=206 parameter1=0 parameter2=0 STR_VAR resource=~ZSTWBK0%ench%~ END
        END
    END

    PATCH_IF enchantment > 0 BEGIN
        FOR ( index = 1; index <= enchantment; ++index ) BEGIN
            LPF CLONE_EFFECT INT_VAR silent = 1 match_opcode=120 match_parameter2=0 match_parameter1=index opcode=206 parameter1=0 parameter2=0 STR_VAR resource=~ZSTWBK0%index%~ END
        END
    END

END
