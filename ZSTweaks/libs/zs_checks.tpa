DEFINE_PATCH_FUNCTION IS_FLAG_SET
INT_VAR
    flag = "-1"
RET
    result // 1 if flag is set, 0 if it's unset. -1 if invalid flag is asked for
BEGIN
    LPF CHECK_EXTENSION STR_VAR extension = "ITM" END
    PATCH_IF flag >= 0 AND flag <= 31 BEGIN
        LPF ITM_FLAGS RET itm_flags = result END
        SET bitmask = (1 << flag)
        SET result = (itm_flags & bitmask) != 0
    END ELSE BEGIN
        SET result = "-1"
    END
END

DEFINE_PATCH_FUNCTION CRE_IS_FLAG_SET
INT_VAR
    flag = "-1"
RET
    result // 1 if flag is set, 0 if it's unset. -1 if invalid flag is asked for
BEGIN
    LPF CHECK_EXTENSION STR_VAR extension = "CRE" END
    PATCH_IF flag >= 0 AND flag <= 31 BEGIN
        LPF CRE_FLAGS RET cre_flags = result END
        SET bitmask = (1 << flag)
        SET result = (cre_flags & bitmask) != 0
    END ELSE BEGIN
        SET result = "-1"
    END
END

DEFINE_PATCH_FUNCTION CHECK_EXTENSION
STR_VAR
    extension = ""
BEGIN
    PATCH_IF STRING_LENGTH "%extension%" = 0 BEGIN
        PATCH_FAIL "Extension is empty"
    END
    SET last_index = (STRING_LENGTH "%SOURCE_RES%") + 1
    LPF SUBSTRING INT_VAR start = last_index length = 3 STR_VAR string = "%SOURCE_FILE%" RET ex = substring END
    PATCH_IF "%ex%" STRING_COMPARE_CASE "%extension%" != 0 BEGIN
        PATCH_FAIL "This function only works for .%extension% files"
    END
END
